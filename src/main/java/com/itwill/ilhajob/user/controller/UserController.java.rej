diff a/src/main/java/com/itwill/ilhajob/user/controller/UserController.java b/src/main/java/com/itwill/ilhajob/user/controller/UserController.java	(rejected hunks)
@@ -47,97 +47,111 @@
 	 * 회원 정보 수정
 	 * 회원 탈퇴
 	 * 회원 정보 보기
-	 * ++ 메시지 알림
 	 */
 	
 	//메인 페이지
-	@RequestMapping("/index")
-	public String main() {
-		return "index";
-	}
-	
-	//회원 대시보드 보기
-	@LoginCheck
-	@RequestMapping("/candidate-dashboard")
-	public String dashboard(HttpServletRequest request) throws Exception {
-		String sUserId = (String)request.getSession().getAttribute("sUserId");
-		//System.out.println(">>>>>>>>"+sUserId);
-		User loginUser = userService.findUser(sUserId);
-		request.setAttribute("loginUser", loginUser);
-		String forwardPath = "candidate-dashboard";
-		return forwardPath;
-	}
-	
-	//회원 정보 보기
-	@LoginCheck
-	@RequestMapping("/candidate-dashboard-profile")
-	public String user_profile(HttpServletRequest request) throws Exception {
-		String forwardPath = "";
-		String sUserId = (String)request.getSession().getAttribute("sUserId");
-		User loginUser = userService.findUser(sUserId);
-		request.setAttribute("loginUser", loginUser);
-		forwardPath = "candidate-dashboard-profile";
-		return forwardPath;
-	}
-	
-	// 회원 정보수정 폼 ***템플릿 복사해서 수정 가능한 modify-form 만들어야 함****
-	@LoginCheck
-	@RequestMapping("/candidate-dashboard-profile-modify-form")
-	public String modify_form(HttpServletRequest request) throws Exception {
-		String forwardPath = "";
-		String sUserId = (String)request.getSession().getAttribute("sUserId");
-		User loginUser = userService.findUser(sUserId);
-		request.setAttribute("loginUser", loginUser);
-		forwardPath = "candidate-dashboard-profile-modify-form";
-		return forwardPath;
-	}
-	
-	// 회원 정보수정
-	@LoginCheck
-	@RequestMapping("/modify_action")
-	public String modify_action(@ModelAttribute User user, HttpServletRequest request) throws Exception {
-		String forwardPath = "";
-		userService.update(user);
-		forwardPath = "redirect:candidate-dashboard-profile";
-		return forwardPath;
-	}
-	
-	
-	//회원 로그인 폼
-	@RequestMapping("/login")
-	public String login() {
-		return "login";
-	}
-	
-	//회원 로그인 액션
-	@PostMapping("/user_login_action")
-	public String user_login_action(@ModelAttribute("fuser")User user,Model model,HttpSession session) throws Exception{
-		String forwardPath = "";
-		try {
-			userService.login(user.getUserEmail(),user.getUserPassword());
-			session.setAttribute("sUserId", user.getUserEmail());
+		@RequestMapping("/index")
+		public String main() {
+			return "index";
+		}
+		
+		//회원 대시보드 보기
+		@LoginCheck
+		@RequestMapping("/candidate-dashboard")
+		public String dashboard(HttpServletRequest request) throws Exception {
+			String sUserId = (String)request.getSession().getAttribute("sUserId");
+			//System.out.println(">>>>>>>>"+sUserId);
+			User loginUser = userService.findUser(sUserId);
+			request.setAttribute("loginUser", loginUser);
+			String forwardPath = "candidate-dashboard";
+			return forwardPath;
+		}
+		
+		//회원 정보 보기
+		@LoginCheck
+		@RequestMapping("/candidate-dashboard-profile")
+		public String user_profile(HttpServletRequest request) throws Exception {
+			String forwardPath = "";
+			String sUserId = (String)request.getSession().getAttribute("sUserId");
+			User loginUser = userService.findUser(sUserId);
+			request.setAttribute("loginUser", loginUser);
+			forwardPath = "candidate-dashboard-profile";
+			return forwardPath;
+		}
+		
+		// 회원 정보수정 폼 ***템플릿 복사해서 수정 가능한 modify-form 만들어야 함****
+		@LoginCheck
+		@RequestMapping("/candidate-dashboard-profile-modify-form")
+		public String modify_form(HttpServletRequest request) throws Exception {
+			String forwardPath = "";
+			String sUserId = (String)request.getSession().getAttribute("sUserId");
+			User loginUser = userService.findUser(sUserId);
+			request.setAttribute("loginUser", loginUser);
+			forwardPath = "candidate-dashboard-profile";
+			return forwardPath;
+		}
+		
+		// 회원 정보수정
+		@LoginCheck
+		@RequestMapping("/modify_action")
+		public String modify_action(@ModelAttribute User user, HttpServletRequest request) throws Exception {
+			String forwardPath = "";
+			userService.update(user);
+			forwardPath = "redirect:candidate-dashboard-profile";
+			return forwardPath;
+		}
+		
+		
+		//회원 로그인 폼
+		@RequestMapping("/login")
+		public String login() {
+			return "login";
+		}
+		
+		//회원 로그인 액션
+		@PostMapping("/user_login_action")
+		public String user_login_action(@ModelAttribute("fuser")User user,Model model,HttpSession session) throws Exception{
+			String forwardPath = "";
+			try {
+				userService.login(user.getUserEmail(),user.getUserPassword());
+				session.setAttribute("sUserId", user.getUserEmail());
+				forwardPath = "redirect:index";
+			}catch (UserNotFoundException e) {
+				e.printStackTrace();
+				model.addAttribute("msg1",e.getMessage());
+				forwardPath = "login";
+			}catch (PasswordMismatchException e) {
+				e.printStackTrace();
+				model.addAttribute("msg2", e.getMessage());
+				forwardPath = "login";
+			}
+			return forwardPath;
+		}
+		
+		// 회원 로그아웃 액션
+		@LoginCheck
+		@RequestMapping("/user_logout_action")
+		public String user_logout_action(HttpServletRequest request) {
+			String forwardPath = "";
+			request.getSession().invalidate();
 			forwardPath = "redirect:index";
-		}catch (UserNotFoundException e) {
-			e.printStackTrace();
-			model.addAttribute("msg1",e.getMessage());
-			forwardPath = "login";
-		}catch (PasswordMismatchException e) {
-			e.printStackTrace();
-			model.addAttribute("msg2", e.getMessage());
-			forwardPath = "login";
+			return forwardPath;
+		}
+
+		//회원의 my applied job보기
+		@LoginCheck
+		@RequestMapping("/candidate-dashboard-applied-job")
+		public String user_applied_job(HttpServletRequest request) throws Exception{
+			String forwardPath="";
+			request.getSession().setAttribute("sUserId", "test2@test.com"); //아이디 임시설정
+			String sUserId = (String)request.getSession().getAttribute("sUserId");
+			User loginUser = userService.findUser(sUserId);
+			User user = userService.findAppList(loginUser.getUserSeq());
+			System.out.println(user);
+			request.setAttribute("loginUser", loginUser);
+			forwardPath = "/candidate-dashboard-applied-job";
+			return forwardPath;
 		}
-		return forwardPath;
-	}
-	
-	// 회원 로그아웃 액션
-	@LoginCheck
-	@RequestMapping("/user_logout_action")
-	public String user_logout_action(HttpServletRequest request) {
-		String forwardPath = "";
-		request.getSession().invalidate();
-		forwardPath = "redirect:index";
-		return forwardPath;
-	}
 	// my resume 이력서 작성 폼
 	
 	/*
